public static void punto2 () {

        Scanner sc = new Scanner(System.in);
        int a = sc.nextInt();
        Pair<Integer, Integer>[] coord;

        int x = sc.nextInt();
        int y = sc.nextInt();
        for (int i = 0; i < a; i++) {
            int n1 = sc.nextInt();
            int n2 = sc.nextInt();

            Pair<Integer, Integer> posicionInicial = new Pair<>(n1,n2);

            int nDesechos = sc.nextInt();

            DigraphAM grafo = new DigraphAM(nDesechos + 1);

            coord = new Pair[nDesechos + 1];
            coord[0] = posicionInicial;

            for (int j = 1; j <= nDesechos; j++) {
                int nA = sc.nextInt();
                int nB = sc.nextInt();
                coord[j] = new Pair(nA,nB);
            }

            for (int k = 0; k <= nDesechos; k++) {
                for (int j = 0; j <= nDesechos; j++) {
                    if (k == j) {
                        continue;
                    }
                    grafo.addArc(k, j,
                            Math.abs(coord[k].first - coord[j].first)
                                    + Math.abs(coord[k].second - coord[j].second)
                    );
                }
            }
            System.out.println("El camino mÃ¡s corto tiene longitud de: " + lab5.heldKarp(grafo));
        }

    }
